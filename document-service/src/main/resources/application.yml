spring:
  application:
    name: document-service
  datasource:
    password: postgres
    url: jdbc:postgresql://localhost:5432/document-db
    username: postgres
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        default_schema: public
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
  servlet:
    multipart:
      max-request-size: 100MB
      max-file-size: 100MB
  kafka:
    producer:
      bootstrap-servers: http://localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      auto-offset-reset: earliest
      bootstrap-servers: localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${random.value}
    prefer-ip-address: true
server:
  port: 0

